# Find the native ASTROACCELERATE includes and library
#
#  ASTROACCELERATE_INSTALL_DIR - top where panda framwork has been installed (lib and include dirs included)
#  ASTROACCELERATE_LIBRARY_DIR - explicitly define directory where to find panda libraries
#  ASTROACCELERATE_INCLUDE_DIR - where to find panda includes
#  ASTROACCELERATE_LIBRARIES   - List of libraries when using panda.
#  ASTROACCELERATE_TEST_LIBRARIES - List of panda test support libraries
#  ASTROACCELERATE_FOUND       - True if panda found.

if(ENABLE_CUDA)
    IF (ASTROACCELERATE_INCLUDE_DIR)
        SET(ASTROACCELERATE_INC_DIR ${ASTROACCELERATE_INCLUDE_DIR})
        UNSET(ASTROACCELERATE_INCLUDE_DIR)
    ENDIF (ASTROACCELERATE_INCLUDE_DIR)

    FIND_PATH(ASTROACCELERATE_INCLUDE_DIR astro-accelerate/version.h
        PATHS ${ASTROACCELERATE_INC_DIR}
          ${ASTROACCELERATE_INSTALL_DIR}/include
          /usr/local/include
          /usr/include )

    SET(ASTROACCELERATE_NAMES astro-accelerate)
    FOREACH( lib ${ASTROACCELERATE_NAMES} )
        FIND_LIBRARY(ASTROACCELERATE_LIBRARY_${lib}
        NAMES ${lib}
        PATHS ${ASTROACCELERATE_LIBRARY_DIR} ${ASTROACCELERATE_INSTALL_DIR} ${ASTROACCELERATE_INSTALL_DIR}/lib /usr/local/lib /usr/lib
        )
        LIST(APPEND ASTROACCELERATE_LIBRARIES ${ASTROACCELERATE_LIBRARY_${lib}})
    ENDFOREACH(lib)

    # handle the QUIETLY and REQUIRED arguments and set ASTROACCELERATE_FOUND to TRUE if.
    # all listed variables are TRUE
    INCLUDE(FindPackageHandleCompat)
    FIND_PACKAGE_HANDLE_STANDARD_ARGS(ASTROACCELERATE DEFAULT_MSG ASTROACCELERATE_LIBRARIES ASTROACCELERATE_INCLUDE_DIR)

    IF(NOT ASTROACCELERATE_FOUND)
        SET( ASTROACCELERATE_LIBRARIES )
        SET( ASTROACCELERATE_TEST_LIBRARIES )
        SET( ASTROACCELERATE_INCLUDE_DIR )
    ELSE(NOT ASTROACCELERATE_FOUND)
        # -- add dependecies
        LIST(APPEND ASTROACCELERATE_LIBRARIES ${CUDA_curand_LIBRARY})
        SET(CMAKE_CXX_FLAGS "-DENABLE_ASTROACCELERATE ${CMAKE_CXX_FLAGS}")
        LIST(APPEND CUDA_NVCC_FLAGS -DENABLE_ASTROACCELERATE)
        LIST(APPEND ASTROACCELERATE_INCLUDE_DIR "${ASTROACCELERATE_INCLUDE_DIR}/astro-accelerate")
        message("Found AstroAccelerate: ${ASTROACCELERATE_INCLUDE_DIR} : ${ASTROACCELERATE_LIBRARIES}")
    ENDIF(NOT ASTROACCELERATE_FOUND)

    MARK_AS_ADVANCED(ASTROACCELERATE_LIBRARIES ASTROACCELERATE_TEST_LIBRARIES ASTROACCELERATE_INCLUDE_DIR)

endif(ENABLE_CUDA)
